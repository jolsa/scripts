/*
 parsers.js 1.0.0 Copyright (c) 2015, Johnny Olsa
 Created: 10/19/2015
 Various parsers (date, time, numerics) and filledArray.
 Feel free to download and share!
 Comments and critique to johnny@johnnyolsa.com
*/
define("parsers",["dates"],function(){function e(b,a){return Array.apply(null,Array(b)).map(function(){return a})}function f(b){return b&&"string"===typeof b?(b=b.match(/\d+/g))&&0!==b.length?b.map(function(a){return+a}):[]:[]}function d(b){return Math.max(Math.floor(Math.log10(Math.abs(b))),0)+1}return{filledArray:e,numDigits:d,numParser:f,dateParser:function(b){if(!b)return NaN;b=f(b);var a=new Date,c=a.getFullYear(),d=a.getMonth(),a=a.getDate(),g=b.length,e=c,h=100*Math.floor(c/100);1===g?a=b[0]:
1<g&&(d=b[0]-1,a=b[1],2<g&&(c=b[2]));if(12<d||31<a)return NaN;100>c&&(c+=h,c>e+20&&(c-=100));return new Date(c,d,a)},timeParser:function(b){if(!b)return NaN;var a=f(b);b=/pm/i.test(b);a=a.concat(e(4,0).slice(a.length));b&&(a[0]+=12);3<d(a[3])&&(a[3]*=Math.pow(10,3-d(a[3])));if(23<a[0]||59<a[1]||59<a[2]||999<a[3])return NaN;b=0;a[1]+=(new Date(0)).getTimezoneOffset();a=36E5*a[b++]+6E4*a[b++]+1E3*a[b++]+a[b++];return new Date(a)}}});
//@ sourceMappingURL=parsers.min.map
